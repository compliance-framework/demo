services:
  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo:/data/db
    networks:
      - continuous-compliance
  db:
    image: postgres:17
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ccf
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - continuous-compliance

  ui:
    image: ghcr.io/compliance-framework/ui:1.2.8
    ports:
      - "8000:80"
    volumes:
      - ./ui-config.json:/app/config.json
    networks:
      - continuous-compliance

  api:
    image: ghcr.io/compliance-framework/configuration-service:0.2.11
    ports:
      - 8080:8080
    volumes:
      - ./oscal-content:/oscal-content
    networks:
      - continuous-compliance
    environment:
      MONGO_URI: mongodb://mongo:27017
      CCF_DB_DEBUG: 0
      APP_PORT: 8080
      CCF_DB_DRIVER: postgres
      CCF_DB_CONNECTION: "host=db user=postgres password=postgres dbname=ccf port=5432 sslmode=disable"

  worker-1:
    build:
      context: ./worker
      args:
        AGENT_VERSION: 0.1.8
    image: demo-agent:0.1.8
    hostname: worker-1
    volumes:
      - ./worker/worker-1.yml:/config.yml
    networks:
      - continuous-compliance

  worker-2:
    build:
      context: ./worker
      args:
        AGENT_VERSION: 0.1.8
    image: demo-agent:0.1.8
    hostname: worker-2
    volumes:
      - ./worker/worker-2.yml:/config.yml
    networks:
      - continuous-compliance

volumes:
  mongo:
  pgdata:
  configuration-service-db:

networks:
  continuous-compliance:
